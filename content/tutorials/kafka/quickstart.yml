metadata:
  name: kafka
spec:
  version: 0.1
  durationMinutes: 10
  icon: ''
  displayName: Connecting Kafka topics to a Quarkus application
  description: In this tutorial, you will set up a Kafka instance and create topics to be used with a Quarkus application
  introduction: |-
    We will be using Apache Kafka, an open-source distributed event streaming platform used by thousands of companies for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.
    
    You can learn more about Apache Kafka by visiting [https://kafka.apache.org/](https://kafka.apache.org/).
    
    Quarkus is an open source, Kubernetes-native Java framework that allows developers to optimize container-native applications for peak performance.
    
    You can learn more about Quarkus by visiting [https://quarkus.io/](https://quarkus.io/).
  prerequisites:
    - Red Hat OpenShift
    - Red Hat Streams for Apache Kafka
  form:
    title: The following information is required before we can get started
    schema:
      fields:
        - component: text-field
          name: openshift
          label: Your OpenShift URL
          description: Fill in the URL
          initialValue: https://console-openshift-console.apps.sandbox.x8i5.p1.openshiftapps.com
          isRequired: true
          helperText: Need OpenShift? Create a sandbox environment here - https://developers.redhat.com/developer-sandbox
          validate:
            - type: required
        - component: text-field
          name: kafka
          label: URL to Application Services -> Streams for Apache Kafka
          description: Fill in the URL
          initialValue: https://cloud.redhat.com/beta/application-services/openshift-streams
          isRequired: true
          helperText: Streams for Apache Kafka is offered as part of Application Services and can be found at https://cloud.redhat.com
          validate:
            - type: required
  tasks:
    - !snippet/proc README.adoc#task-1
  conclusion: !snippet README.adoc#conclusion
